name: SonarCloud Analysis

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonar:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    # Skip analysis if PR is from a fork (for security reasons) or if CI workflow failed
    if: (github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success') &&
        (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # If the workflow is triggered by workflow_run, download compiled classes
      - name: Download compiled classes (if available)
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: compiled-classes
          path: ./

      # Conditional compile - only if classes weren't downloaded or download failed
      - name: Compile code (if needed)
        id: compile
        if: github.event_name != 'workflow_run' || steps.download.outcome == 'failure'
        run: mvn -B clean compile

      - name: Analyze with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Generate from https://sonarcloud.io/account/security/
        run: |
          # Run SonarCloud analysis with binaries path configuration
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -DskipTests \
            -Dsonar.projectKey=h00dieB0y_tika-service \
            -Dsonar.organization=h00dieb0y \
