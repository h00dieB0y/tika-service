name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    working-directory: ./

env:
  MAVEN_OPTS: -Xmx2g -XX:+UseContainerSupport

jobs:
  docker-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find Dockerfiles
        id: find-dockerfiles
        run: |
          echo "DOCKERFILES=$(find . -name 'Dockerfile' -o -name '*.dockerfile' | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Lint Dockerfiles with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        if: ${{ steps.find-dockerfiles.outputs.DOCKERFILES != '' }}
        with:
          dockerfile: ${{ steps.find-dockerfiles.outputs.DOCKERFILES }}
          failure-threshold: error

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [21]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For SonarCloud analysis

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java-version }}
          cache: maven

      - name: Build & run tests
        run: mvn -B verify --fail-at-end

      - name: Upload Maven target directories
        uses: actions/upload-artifact@v4
        with:
          name: maven-target
          path: |
            */target/
            target/

  static-code-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Install modules (skip tests)
        run: mvn -B install -DskipTests

      - name: Static code analysis
        run: mvn checkstyle:check pmd:check spotbugs:check

      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-reports
          path: |
            */target/site/checkstyle.html
            */target/site/pmd.html
            */target/spotbugsXml.xml

  mutation-testing:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Download Maven target directories
        uses: actions/download-artifact@v4
        with:
          name: maven-target

      - name: Run PITest mutation testing
        run: mvn org.pitest:pitest-maven:mutationCoverage -DwithHistory=true -DtimestampedReports=false
        env:
          MAVEN_OPTS: "-Xmx4g"

      - name: Upload mutation test reports
        uses: actions/upload-artifact@v4
        with:
          name: pitest-reports
          path: |
            */target/pit-reports/

  sonarcloud-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    # Skip running on forks without Sonar credentials
    if: github.repository == 'h00dieB0y/tika-service'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for SonarCloud

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Download Maven target directories
        uses: actions/download-artifact@v4
        with:
          name: maven-target

      - name: SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          # Run SonarCloud analysis on the multi-module project
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
